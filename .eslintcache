[{"C:\\Users\\Jake\\React Apps\\synth\\src\\index.js":"1","C:\\Users\\Jake\\React Apps\\synth\\src\\serviceWorker.js":"2","C:\\Users\\Jake\\React Apps\\synth\\src\\components\\App\\index.js":"3","C:\\Users\\Jake\\React Apps\\synth\\src\\components\\MyScene\\index.js":"4","C:\\Users\\Jake\\React Apps\\synth\\src\\components\\InputPanel\\index.js":"5","C:\\Users\\Jake\\React Apps\\synth\\src\\components\\InputPanel\\BoardInput\\index.js":"6","C:\\Users\\Jake\\React Apps\\synth\\src\\components\\InputPanel\\Formik\\MyInput\\index.js":"7","C:\\Users\\Jake\\React Apps\\synth\\src\\components\\InputPanel\\LightInput\\index.js":"8","C:\\Users\\Jake\\React Apps\\synth\\src\\components\\App\\constants\\initial.js":"9","C:\\Users\\Jake\\React Apps\\synth\\src\\components\\MyScene\\Board\\index.js":"10","C:\\Users\\Jake\\React Apps\\synth\\src\\components\\InputPanel\\AddPart\\index.js":"11","C:\\Users\\Jake\\React Apps\\synth\\src\\components\\InputPanel\\EditPart\\index.js":"12","C:\\Users\\Jake\\React Apps\\synth\\src\\components\\parts\\index.js":"13","C:\\Users\\Jake\\React Apps\\synth\\src\\components\\MyScene\\KnobModal\\index.js":"14","C:\\Users\\Jake\\React Apps\\synth\\src\\components\\InputPanel\\Formik\\MySelect\\index.js":"15"},{"size":729,"mtime":1611702165967,"results":"16","hashOfConfig":"17"},{"size":5086,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":3853,"mtime":1614592754528,"results":"19","hashOfConfig":"17"},{"size":6456,"mtime":1614587861620,"results":"20","hashOfConfig":"17"},{"size":1706,"mtime":1614564627702,"results":"21","hashOfConfig":"17"},{"size":8671,"mtime":1612583540477,"results":"22","hashOfConfig":"17"},{"size":998,"mtime":1612165933591,"results":"23","hashOfConfig":"17"},{"size":9423,"mtime":1612582286692,"results":"24","hashOfConfig":"17"},{"size":1112,"mtime":1614569000023,"results":"25","hashOfConfig":"17"},{"size":1445,"mtime":1612581271943,"results":"26","hashOfConfig":"17"},{"size":4449,"mtime":1614742404023,"results":"27","hashOfConfig":"17"},{"size":5438,"mtime":1614582520314,"results":"28","hashOfConfig":"17"},{"size":1420,"mtime":1614645592800,"results":"29","hashOfConfig":"17"},{"size":1030,"mtime":1614567397276,"results":"30","hashOfConfig":"17"},{"size":1178,"mtime":1614593460550,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"16brp3u",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"34"},"C:\\Users\\Jake\\React Apps\\synth\\src\\index.js",[],["68","69"],"C:\\Users\\Jake\\React Apps\\synth\\src\\serviceWorker.js",[],"C:\\Users\\Jake\\React Apps\\synth\\src\\components\\App\\index.js",["70","71","72","73"],"// index.js (src/components/App)\r\n// Version 0.1.0\r\n// 27-January 2021\r\n// Developers: Roey Tsemah & Jacob Liss, P.E.\r\n\r\n//>>>>> NPM PACKAGES <<<<<//\r\nimport React, { useState, useReducer } from \"react\";\r\nimport MyScene from \"../MyScene\";\r\nimport InputPanel from \"../InputPanel\";\r\n\r\n//>>>>> DEFAULT DESIGN PARAMETERS <<<<<//\r\nimport * as INIT from \"./constants/initial\";\r\n\r\n//>>>>> SCSS STYLES <<<<<//\r\nimport \"./styles.scss\";\r\n\r\n//>>>>> PARAMETERS REDUCER <<<<<//\r\nfunction paramReducer(initState, action) {\r\n    let newState;\r\n    switch (action.type) {\r\n        case \"board\":\r\n            // keep this one\r\n            newState = {\r\n                ...initState,\r\n                [action.type]: action.data\r\n            };\r\n            return newState;\r\n            break;\r\n        case \"light\":\r\n            // keep this one\r\n            newState = {\r\n                ...initState,\r\n                [action.type]: action.data\r\n            };\r\n            return newState;\r\n            break;\r\n        case \"knob\":\r\n            // obsolete syntax\r\n            // update for new part list\r\n            newState = {\r\n                ...initState,\r\n                [action.type]: action.data\r\n            };\r\n            return newState;\r\n            break;\r\n        default:\r\n            newState = initState;\r\n            console.log(\"reducer error\", initState, action);\r\n            return newState;\r\n    };\r\n};\r\n\r\n//>>>>> COMPONENT FUNCTION <<<<<//\r\nconst App = () => {\r\n\r\n    //>>>>> 1 - Parameter Reducer <<<<<//\r\n    const [fiber, dispatchFiber] = useReducer(paramReducer, INIT.parameters);\r\n\r\n    // Notes // Notes // Notes // Notes // Notes // Notes // Notes // Notes // Notes //\r\n    //\r\n    // **Objective**\r\n    // \r\n    // \r\n    // \r\n    // **Comments**\r\n    // - \r\n    // - \r\n    //\r\n    // Notes // Notes // Notes // Notes // Notes // Notes // Notes // Notes // Notes //\r\n\r\n    //>>>>> 2 - Installed Parts <<<<<//\r\n    const [partlist, setPartList] = useState({\r\n        knobs : [\r\n            {\r\n                id: 0,\r\n                position: { x: -20, y: -20 }\r\n            },\r\n            {\r\n                id: 1,\r\n                position: { x: 20, y: 20 }\r\n            },\r\n            {\r\n                id: 1,\r\n                position: { x: 20, y: -10 }\r\n            }\r\n        ],\r\n        switches: false\r\n    });\r\n\r\n    // Notes // Notes // Notes // Notes // Notes // Notes // Notes // Notes // Notes //\r\n    //\r\n    // **Objective**\r\n    // \r\n    // \r\n    // \r\n    // **Comments**\r\n    // - not sure yet if this will be a useReducer or useState\r\n    // - probably like the line reducer in chart app (add/delete/edit action types)\r\n    // - leave static until form is done\r\n    // - this should be empty at startup when it's done\r\n    //\r\n    // Notes // Notes // Notes // Notes // Notes // Notes // Notes // Notes // Notes //\r\n\r\n    //>>>>> Debug <<<<<//\r\n    // console.log(\"Hook - fiber\", fiber);\r\n    // console.log(\"Hook - partlist\", partlist);\r\n    //>>>>> Debug <<<<<//\r\n\r\n    //>>>>> Return <<<<<//\r\n    return (\r\n        <div\r\n            id=\"App-container\"\r\n            style={{ width: \"100%\", height: \"auto\" }}\r\n        >    \r\n            <div id=\"App-MyScene\">\r\n                <MyScene\r\n                    fiber={fiber}\r\n                    partList={partlist}\r\n                />               \r\n            </div>         \r\n            <div id=\"App-InputPanel\">\r\n                <InputPanel\r\n                    initParam={INIT.parameters}\r\n                    onDispatch={(e) => dispatchFiber(e)}\r\n                    onAddPart={(e) => console.log(e)}\r\n                    partList={partlist}\r\n                />\r\n            </div>\r\n        </div>                \r\n    );    \r\n};\r\n\r\nexport default App;\r\n\r\n\n// To Do List\n// - Make it work!\r\n\r\n// Version History\n// 0.1.0\n// - Brand spankin\" new\n\n// ref code","C:\\Users\\Jake\\React Apps\\synth\\src\\components\\MyScene\\index.js",[],"C:\\Users\\Jake\\React Apps\\synth\\src\\components\\InputPanel\\index.js",[],"C:\\Users\\Jake\\React Apps\\synth\\src\\components\\InputPanel\\BoardInput\\index.js",["74"],"// index.js (src/components/InputPanel/BoardInput)\r\n// Version 0.1.0\r\n// 27-January 2021\r\n// Developers: Roey Tsemah & Jacob Liss, P.E.\r\n\r\n//>>>>> PACKAGES <<<<<//\r\nimport React from \"react\";\r\nimport { Formik, Form, useField } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\n//>>>>> FORMIK COMPONENT IMPORT <<<<<//\r\nimport MyInput from \"../Formik/MyInput\";\r\n\r\n//>>>>> SCSS STYLES <<<<<//\r\nimport \"./styles.scss\";\r\n\r\n//>>>>> COMPONENT FUNTCION <<<<<//  \r\nconst BoardInput = (props) => {  \r\n\r\n    const initParam = props.initParam.board;\r\n    \r\n    //>>>>> Return <<<<<//\r\n    return (\r\n        <div\r\n            id=\"BoardInput-container\"\r\n            className=\"Base-block-flexCol\"\r\n        >\r\n            <div className=\"Base-flexedCol-block\">\r\n                <h3>BOARD PARAMETERS</h3>\r\n            </div>\r\n            <div className=\"Base-flexedCol-block\">                    \r\n                <Formik\r\n                    initialValues={{\r\n                        length: initParam.size.x,\r\n                        width: initParam.size.y,\r\n                        height: initParam.size.z,\r\n                        x: initParam.position.x,\r\n                        y: initParam.position.y,\r\n                        z: initParam.position.z,\r\n                        color: initParam.mesh.color,\r\n                        metal: initParam.mesh.metal,\r\n                        rough: initParam.mesh.rough,\r\n                    }}\r\n                    validationSchema={Yup.object({\r\n                        length: Yup.number()\r\n                            .required(\"Required\")\r\n                            .min(0, \"Min 0.0\")\r\n                            .max(100, \"Max 100.0\"),\r\n                        width: Yup.number()\r\n                            .required(\"Required\")\r\n                            .min(0, \"Min 0.0\")\r\n                            .max(100, \"Max 100.0\"),\r\n                        height: Yup.number()\r\n                            .required(\"Required\")\r\n                            .min(0, \"Min 0.0\")\r\n                            .max(10, \"Max 10.0\"),\r\n                        x: Yup.number()\r\n                            .required(\"Required\"),\r\n                        y: Yup.number()\r\n                            .required(\"Required\"),\r\n                        z: Yup.number()\r\n                            .required(\"Required\"),\r\n                        color: Yup.string()\r\n                            .matches(/^#([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/, \"Invalid Color\")\r\n                            .required(\"Required\"),      \r\n                        metal: Yup.number()\r\n                            .required(\"Required\")\r\n                            .min(0, \"Min 0.0\")\r\n                            .max(1, \"Max 1.0\"),\r\n                        rough: Yup.number()\r\n                            .required(\"Required\")\r\n                            .min(0, \"Min 0.0\")\r\n                            .max(1, \"Max 1.0\"),\r\n                    })}\r\n                    onSubmit={(values) => {\r\n                        props.onDispatch({\r\n                            type: 'board',\r\n                            data: {\r\n                                size: {\r\n                                    x: values.length,\r\n                                    y: values.width,\r\n                                    z: values.height\r\n                                },\r\n                                position: {\r\n                                    x: values.x,\r\n                                    y: values.y,\r\n                                    z: values.z\r\n                                },\r\n                                scale: {\r\n                                    x: 1,\r\n                                    y: 1,\r\n                                    z: 1\r\n                                },\r\n                                mesh: {\r\n                                    color: values.color,\r\n                                    metal: values.metal,\r\n                                    rough: values.rough,\r\n                                }\r\n                            }\r\n                        });\r\n                    }}    \r\n                >        \r\n                    <Form className=\"Formik-Form\" >                        \r\n                        <div className=\"Formik-formRow\" >\r\n                            <MyInput    \r\n                                className=\"Formik-MyInput\"\r\n                                title=\"Length\"\r\n                                label=\"L\"\r\n                                name=\"length\"\r\n                                type=\"number\" \r\n                            />\r\n                        </div>\r\n                        <div className=\"Formik-formRow\" >\r\n                            <MyInput\r\n                                className=\"Formik-MyInput\"\r\n                                title=\"Width\"\r\n                                label=\"W\"\r\n                                name=\"width\"\r\n                                type=\"number\"\r\n                            />\r\n                        </div>  \r\n                        <div className=\"Formik-formRow\" >\r\n                            <MyInput\r\n                                className=\"Formik-MyInput\"\r\n                                title=\"Height\"\r\n                                label=\"H\"\r\n                                name=\"height\"\r\n                                type=\"number\"\r\n                            />\r\n                        </div>  \r\n                        <div className=\"Formik-formRow\" >\r\n                            <MyInput\r\n                                className=\"Formik-MyInput\"\r\n                                title=\"X\"\r\n                                label=\"X\"\r\n                                name=\"x\"\r\n                                type=\"number\"\r\n                                disabled={true}\r\n                            />\r\n                        </div>\r\n                        <div className=\"Formik-formRow\" >\r\n                            <MyInput\r\n                                className=\"Formik-MyInput\"\r\n                                title=\"Y\"\r\n                                label=\"Y\"\r\n                                name=\"y\"\r\n                                type=\"number\"\r\n                                disabled={true}\r\n                            />\r\n                        </div>\r\n                        <div className=\"Formik-formRow\" >\r\n                            <MyInput\r\n                                className=\"Formik-MyInput\"\r\n                                title=\"Z\"\r\n                                label=\"Z\"\r\n                                name=\"z\"\r\n                                type=\"number\"\r\n                                disabled={true}\r\n                            />\r\n                        </div>  \r\n                        <div className=\"Formik-formRow\" >\r\n                            <MyInput\r\n                                className=\"Formik-MyInput\"\r\n                                title=\"Color\"\r\n                                label=\"Color\"\r\n                                name=\"color\"\r\n                                type=\"text\"\r\n                            />\r\n                        </div> \r\n                        <div className=\"Formik-formRow\" >\r\n                            <MyInput\r\n                                className=\"Formik-MyInput\"\r\n                                title=\"Metal\"\r\n                                label=\"Metal\"\r\n                                name=\"metal\"\r\n                                type=\"number\"\r\n                            />\r\n                        </div> \r\n                        <div className=\"Formik-formRow\" >\r\n                            <MyInput\r\n                                className=\"Formik-MyInput\"\r\n                                title=\"Roughness\"\r\n                                label=\"Roughness\"\r\n                                name=\"rough\"\r\n                                type=\"number\"\r\n                            />\r\n                        </div> \r\n                        <div className=\"Formik-formRow\" >\r\n                            <button\r\n                                title=\"Update\"\r\n                                type=\"submit\"                                            \r\n                            >\r\n                                <span role=\"img\" >UPDATE</span>\r\n                            </button>\r\n                        </div>                          \r\n                    </Form>\r\n                </Formik>\r\n            </div>        \r\n        </div>\r\n    );    \r\n}\r\n\r\nexport default BoardInput;\r\n\r\n// To Do List\r\n// - \r\n\r\n// Version History\r\n// -\r\n\r\n\r\n","C:\\Users\\Jake\\React Apps\\synth\\src\\components\\InputPanel\\Formik\\MyInput\\index.js",["75"],"// Title: index.js (src/components/InputPanel/Formik/MyInput)\r\n// Version: 0.1.0\r\n// Date: 30-January 2021\r\n// Developers: Roey Tsemah & Jacob Liss, P.E.\r\n\r\n//>>>>> PACKAGES <<<<<//\r\nimport React from 'react';\r\nimport { Formik, useField } from 'formik';\r\n\r\n//>>>>> SCSS STYLES <<<<<//\r\nimport \"../../../../scss/base.scss\";\r\n\r\n//>>>>> Formik Standard <<<<<//\r\nconst MyInput = ({ label, ...props }) => {\r\n    const [field, meta] = useField(props);\r\n    return (\r\n        <div className='Formik-MyInput-container' >\r\n            <label\r\n                className='Formik-MyInput-label'\r\n                htmlFor={props.id || props.name}\r\n            >{label}</label>\r\n            <input className='Formik-MyInput-root' {...field} {...props} />\r\n            <span\r\n                title={meta.error}\r\n                className='Formik-MyInput-error'\r\n            >{meta.touched && meta.error ? \"\\uD83D\\uDEA8\" : null}</span>\r\n        </ div>\r\n    );\r\n};\r\n\r\n//>>>>> EXPORT <<<<<//\r\nexport default MyInput;","C:\\Users\\Jake\\React Apps\\synth\\src\\components\\InputPanel\\LightInput\\index.js",[],"C:\\Users\\Jake\\React Apps\\synth\\src\\components\\App\\constants\\initial.js",[],"C:\\Users\\Jake\\React Apps\\synth\\src\\components\\MyScene\\Board\\index.js",[],"C:\\Users\\Jake\\React Apps\\synth\\src\\components\\InputPanel\\AddPart\\index.js",["76"],"C:\\Users\\Jake\\React Apps\\synth\\src\\components\\InputPanel\\EditPart\\index.js",["77","78","79"],"// index.js (src/components/InputPanel/EditPart)\r\n// Version 0.1.0\r\n// 5-February 2021\r\n// Developers: Roey Tsemah & Jacob Liss, P.E.\r\n\r\n//>>>>> PACKAGES <<<<<//\r\nimport React from \"react\";\r\nimport { Formik, Form, useField } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\n//>>>>> FORMIK COMPONENT IMPORT <<<<<//\r\nimport MyInput from \"../Formik/MyInput\";\r\n\r\n//>>>>> SCSS STYLES <<<<<//\r\nimport \"./styles.scss\";\r\n\r\n//>>>>> COMPONENT FUNTCION <<<<<//  \r\nconst EditPart = (props) => {  \r\n    \r\n    //>>>>> Return <<<<<//\r\n    return (\r\n        <div\r\n            id=\"KnobInput-container\"\r\n            className=\"Base-block-flexCol\"\r\n        >\r\n            <div className=\"Base-flexedCol-block\">\r\n                <h3>EDIT A PART</h3>\r\n            </div>\r\n            <div className=\"Base-flexedCol-block\">  \r\n                <Formik>\r\n                    <Form>\r\n                    </Form>\r\n                </Formik>\r\n            </div>\r\n            {/*<div className=\"Base-flexedCol-block\">                    \r\n                <Formik\r\n                    initialValues={{\r\n                        x: initParam.position.x,\r\n                        y: initParam.position.y,\r\n                        rBot: initParam.size.rBot,\r\n                        rTop: initParam.size.rTop,\r\n                        h: initParam.size.h,\r\n                    }}\r\n                    validationSchema={Yup.object({\r\n                        x: Yup.number()\r\n                            .required(\"Required\"),\r\n                        y: Yup.number()\r\n                            .required(\"Required\"),\r\n                        rBot: Yup.number()\r\n                            .required(\"Required\"),\r\n                        rTop: Yup.number()\r\n                            .required(\"Required\"),\r\n                        h: Yup.number()\r\n                            .required(\"Required\"),                        \r\n                    })}\r\n                    onSubmit={(values) => {\r\n                        props.onDispatch({\r\n                            type: 'knob',\r\n                            data: {                                \r\n                                position: {\r\n                                    x: values.x,\r\n                                    y: values.y\r\n                                },\r\n                                size: {\r\n                                    rBot: values.rBot,\r\n                                    rTop: values.rTop,\r\n                                    h: values.h\r\n                                }\r\n                            }\r\n                        });\r\n                    }}    \r\n                >        \r\n                    <Form className=\"Formik-Form\" >                        \r\n                        <div className=\"Formik-formRow\" >\r\n                            <MyInput    \r\n                                className=\"Formik-MyInput\"\r\n                                title=\"X\"\r\n                                label=\"X\"\r\n                                name=\"x\"\r\n                                type=\"number\" \r\n                            />\r\n                        </div>\r\n                        <div className=\"Formik-formRow\" >\r\n                            <MyInput\r\n                                className=\"Formik-MyInput\"\r\n                                title=\"Y\"\r\n                                label=\"Y\"\r\n                                name=\"y\"\r\n                                type=\"number\"\r\n                            />\r\n                        </div> \r\n                        <div className=\"Formik-formRow\" >\r\n                            <MyInput\r\n                                className=\"Formik-MyInput\"\r\n                                title=\"Bottom Radius\"\r\n                                label=\"Ro\"\r\n                                name=\"rBot\"\r\n                                type=\"number\"\r\n                            />\r\n                        </div>  \r\n                        <div className=\"Formik-formRow\" >\r\n                            <MyInput\r\n                                className=\"Formik-MyInput\"\r\n                                title=\"Top Radius\"\r\n                                label=\"Rf\"\r\n                                name=\"rTop\"\r\n                                type=\"number\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"Formik-formRow\" >\r\n                            <MyInput\r\n                                className=\"Formik-MyInput\"\r\n                                title=\"Height\"\r\n                                label=\"Height\"\r\n                                name=\"h\"\r\n                                type=\"number\"\r\n                            />\r\n                        </div>  \r\n                        <div className=\"Formik-formRow\" >\r\n                            <button\r\n                                title=\"Update\"\r\n                                type=\"submit\"                                            \r\n                            >\r\n                                <span role=\"img\" >UPDATE</span>\r\n                            </button>\r\n                        </div>                          \r\n                    </Form>\r\n                </Formik>\r\n            </div>*/}       \r\n        </div>\r\n    );    \r\n}\r\n\r\nexport default EditPart;\r\n\r\n// To Do List\r\n// - menu to identify which part to edit by type and index\r\n\r\n// Version History\r\n// -\r\n\r\n\r\n","C:\\Users\\Jake\\React Apps\\synth\\src\\components\\parts\\index.js",[],"C:\\Users\\Jake\\React Apps\\synth\\src\\components\\MyScene\\KnobModal\\index.js",[],"C:\\Users\\Jake\\React Apps\\synth\\src\\components\\InputPanel\\Formik\\MySelect\\index.js",["80","81"],"// Title: index.js (src/components/InputPanel/Formik/MySelect)\r\n// Version: 0.1.0\r\n// Date: 1-March 2021\r\n// Developers: Roey Tsemah & Jacob Liss, P.E.\r\n\r\n//>>>>> PACKAGES <<<<<//\r\nimport React from 'react';\r\nimport { Formik, useField } from 'formik';\r\n\r\n//>>>>> SCSS STYLES <<<<<//\r\nimport \"../../../../scss/base.scss\";\r\n\r\n//>>>>> Formik Standard <<<<<//\r\nconst MySelect = ({ label, ...props }) => {\r\n    const [field, meta] = useField(props);\r\n    return (\r\n        <div>\r\n            {/*<label\r\n                className='Formik-MyInput-label'\r\n                htmlFor={props.id || props.name}\r\n            >{label}</label>\r\n            <input className='Formik-MyInput-root' {...field} {...props} />\r\n            <span\r\n                title={meta.error}\r\n                className='Formik-MyInput-error'\r\n            >{meta.touched && meta.error ? \"\\uD83D\\uDEA8\" : null}</span>*/}\r\n            <select {...field} {...props} >\r\n                {props.optionList.map(item => {\r\n                    return (<option >{item}</option>)                   \r\n                })}\r\n            </select>\r\n        </ div>\r\n    );\r\n};\r\n\r\n//>>>>> EXPORT <<<<<//\r\nexport default MySelect;",{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":28,"column":13,"nodeType":"88","messageId":"89","endLine":28,"endColumn":19},{"ruleId":"86","severity":1,"message":"87","line":36,"column":13,"nodeType":"88","messageId":"89","endLine":36,"endColumn":19},{"ruleId":"86","severity":1,"message":"87","line":45,"column":13,"nodeType":"88","messageId":"89","endLine":45,"endColumn":19},{"ruleId":"90","severity":1,"message":"91","line":72,"column":22,"nodeType":"92","messageId":"93","endLine":72,"endColumn":33},{"ruleId":"90","severity":1,"message":"94","line":8,"column":24,"nodeType":"92","messageId":"93","endLine":8,"endColumn":32},{"ruleId":"90","severity":1,"message":"95","line":8,"column":10,"nodeType":"92","messageId":"93","endLine":8,"endColumn":16},{"ruleId":"96","severity":1,"message":"97","line":36,"column":8,"nodeType":"98","endLine":36,"endColumn":21,"suggestions":"99"},{"ruleId":"90","severity":1,"message":"94","line":8,"column":24,"nodeType":"92","messageId":"93","endLine":8,"endColumn":32},{"ruleId":"90","severity":1,"message":"100","line":9,"column":13,"nodeType":"92","messageId":"93","endLine":9,"endColumn":16},{"ruleId":"90","severity":1,"message":"101","line":12,"column":8,"nodeType":"92","messageId":"93","endLine":12,"endColumn":15},{"ruleId":"90","severity":1,"message":"95","line":8,"column":10,"nodeType":"92","messageId":"93","endLine":8,"endColumn":16},{"ruleId":"90","severity":1,"message":"102","line":15,"column":19,"nodeType":"92","messageId":"93","endLine":15,"endColumn":23},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unreachable","Unreachable code.","BreakStatement","unreachableCode","no-unused-vars","'setPartList' is assigned a value but never used.","Identifier","unusedVar","'useField' is defined but never used.","'Formik' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'groupOptions' and 'namesOptions'. Either include them or remove the dependency array.","ArrayExpression",["105"],"'Yup' is defined but never used.","'MyInput' is defined but never used.","'meta' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},"Update the dependencies array to be: [activegroup, groupOptions, namesOptions]",{"range":"108","text":"109"},[1255,1268],"[activegroup, groupOptions, namesOptions]"]