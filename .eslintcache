[{"C:\\Users\\Jake\\React Apps\\synthuxpad\\src\\index.js":"1","C:\\Users\\Jake\\React Apps\\synthuxpad\\src\\serviceWorker.js":"2","C:\\Users\\Jake\\React Apps\\synthuxpad\\src\\components\\App\\index.js":"3","C:\\Users\\Jake\\React Apps\\synthuxpad\\src\\components\\App\\constants\\initial.js":"4","C:\\Users\\Jake\\React Apps\\synthuxpad\\src\\components\\InputPanel\\index.js":"5","C:\\Users\\Jake\\React Apps\\synthuxpad\\src\\components\\MyScene\\index.js":"6","C:\\Users\\Jake\\React Apps\\synthuxpad\\src\\components\\InputPanel\\AddPart\\index.js":"7","C:\\Users\\Jake\\React Apps\\synthuxpad\\src\\components\\InputPanel\\EditPart\\index.js":"8","C:\\Users\\Jake\\React Apps\\synthuxpad\\src\\components\\InputPanel\\BoardInput\\index.js":"9","C:\\Users\\Jake\\React Apps\\synthuxpad\\src\\components\\InputPanel\\LightInput\\index.js":"10","C:\\Users\\Jake\\React Apps\\synthuxpad\\src\\components\\MyScene\\Board\\index.js":"11","C:\\Users\\Jake\\React Apps\\synthuxpad\\src\\components\\MyScene\\KnobModal\\index.js":"12","C:\\Users\\Jake\\React Apps\\synthuxpad\\src\\components\\parts\\index.js":"13","C:\\Users\\Jake\\React Apps\\synthuxpad\\src\\components\\InputPanel\\Formik\\MyInput\\index.js":"14","C:\\Users\\Jake\\React Apps\\synthuxpad\\src\\components\\InputPanel\\Formik\\MySelect\\index.js":"15"},{"size":738,"mtime":1614840023933,"results":"16","hashOfConfig":"17"},{"size":5227,"mtime":1614840023936,"results":"18","hashOfConfig":"17"},{"size":3637,"mtime":1614905705888,"results":"19","hashOfConfig":"17"},{"size":1069,"mtime":1614905760087,"results":"20","hashOfConfig":"17"},{"size":1678,"mtime":1615424093199,"results":"21","hashOfConfig":"17"},{"size":5922,"mtime":1614906093436,"results":"22","hashOfConfig":"17"},{"size":4529,"mtime":1614932774727,"results":"23","hashOfConfig":"17"},{"size":5238,"mtime":1614932938191,"results":"24","hashOfConfig":"17"},{"size":8506,"mtime":1614905705913,"results":"25","hashOfConfig":"17"},{"size":9277,"mtime":1614905705902,"results":"26","hashOfConfig":"17"},{"size":1360,"mtime":1614906114419,"results":"27","hashOfConfig":"17"},{"size":789,"mtime":1614906128660,"results":"28","hashOfConfig":"17"},{"size":1468,"mtime":1614906196416,"results":"29","hashOfConfig":"17"},{"size":906,"mtime":1614905924214,"results":"30","hashOfConfig":"17"},{"size":1142,"mtime":1614932571463,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"ils0st",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"34"},"C:\\Users\\Jake\\React Apps\\synthuxpad\\src\\index.js",[],["69","70"],"C:\\Users\\Jake\\React Apps\\synthuxpad\\src\\serviceWorker.js",[],"C:\\Users\\Jake\\React Apps\\synthuxpad\\src\\components\\App\\index.js",["71"],"// index.js (src/components/App)\r\n\r\n//>>>>> NPM PACKAGES <<<<<//\r\nimport React, { useState, useReducer } from \"react\";\r\nimport MyScene from \"../MyScene\";\r\nimport InputPanel from \"../InputPanel\";\r\n\r\n//>>>>> DEFAULT DESIGN PARAMETERS <<<<<//\r\nimport * as INIT from \"./constants/initial\";\r\n\r\n//>>>>> SCSS STYLES <<<<<//\r\nimport \"./styles.scss\";\r\n\r\n//>>>>> PARAMETERS REDUCER <<<<<//\r\nfunction paramReducer(initState, action) {\r\n    let newState;\r\n    switch (action.type) {\r\n        case \"board\":\r\n            // keep this one\r\n            newState = {\r\n                ...initState,\r\n                [action.type]: action.data\r\n            };\r\n            return newState;\r\n        case \"light\":\r\n            // keep this one\r\n            newState = {\r\n                ...initState,\r\n                [action.type]: action.data\r\n            };\r\n            return newState;\r\n        case \"knob\":\r\n            // obsolete syntax\r\n            // update for new part list\r\n            newState = {\r\n                ...initState,\r\n                [action.type]: action.data\r\n            };\r\n            return newState;\r\n        default:\r\n            newState = initState;\r\n            console.log(\"reducer error\", initState, action);\r\n            return newState;\r\n    };\r\n};\r\n\r\n//>>>>> COMPONENT FUNCTION <<<<<//\r\nconst App = () => {\r\n\r\n    //>>>>> 1 - Parameter Reducer <<<<<//\r\n    const [fiber, dispatchFiber] = useReducer(paramReducer, INIT.parameters);\r\n\r\n    // Notes // Notes // Notes // Notes // Notes // Notes // Notes // Notes // Notes //\r\n    //\r\n    // **Objective**\r\n    // - This reducer is for all the required parts setup options\r\n    // - For now this is limited to lighting and the board itself\r\n    // \r\n    // **Comments**\r\n    // - Cannot control the camera dynamically this way\r\n    // - \r\n    //\r\n    // Notes // Notes // Notes // Notes // Notes // Notes // Notes // Notes // Notes //\r\n\r\n    //>>>>> 2 - Installed Parts <<<<<//\r\n    const [partlist, setPartList] = useState({\r\n        knobs : [\r\n            {\r\n                id: 0,\r\n                position: { x: -20, y: -20 }\r\n            },\r\n            {\r\n                id: 1,\r\n                position: { x: 20, y: 20 }\r\n            },\r\n            {\r\n                id: 1,\r\n                position: { x: 20, y: -10 }\r\n            }\r\n        ],\r\n        switches: false\r\n    });\r\n\r\n    // Notes // Notes // Notes // Notes // Notes // Notes // Notes // Notes // Notes //\r\n    //\r\n    // **Objective**\r\n    // - Add, delete, clear the part list\r\n    // \r\n    // \r\n    // **Comments**\r\n    // - useState to start, but this may be better as a useReducer with many parts\r\n    //\r\n    // Notes // Notes // Notes // Notes // Notes // Notes // Notes // Notes // Notes //\r\n\r\n    //>>>>> Debug <<<<<//\r\n    // console.log(\"Hook - fiber\", fiber);\r\n    // console.log(\"Hook - partlist\", partlist);\r\n    //>>>>> Debug <<<<<//\r\n\r\n    //>>>>> Return <<<<<//\r\n    return (\r\n        <div\r\n            id=\"App-container\"\r\n            style={{ width: \"100%\", height: \"auto\" }}\r\n        >    \r\n            <div id=\"App-MyScene\">\r\n                <MyScene\r\n                    fiber={fiber}\r\n                    partList={partlist}\r\n                />               \r\n            </div>         \r\n            <div id=\"App-InputPanel\">\r\n                <InputPanel\r\n                    initParam={INIT.parameters}\r\n                    onDispatch={(e) => dispatchFiber(e)}\r\n                    onAddPart={(e) => console.log(e)}\r\n                    partList={partlist}\r\n                />\r\n            </div>\r\n        </div>                \r\n    );    \r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\Jake\\React Apps\\synthuxpad\\src\\components\\App\\constants\\initial.js",[],"C:\\Users\\Jake\\React Apps\\synthuxpad\\src\\components\\InputPanel\\index.js",[],"C:\\Users\\Jake\\React Apps\\synthuxpad\\src\\components\\MyScene\\index.js",[],"C:\\Users\\Jake\\React Apps\\synthuxpad\\src\\components\\InputPanel\\AddPart\\index.js",["72"],"// index.js (src/components/InputPanel/AddPart)\r\n\r\n//>>>>> PACKAGES <<<<<//\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Formik, Form } from \"formik\";\r\n\r\n//>>>>> FORMIK COMPONENT IMPORT <<<<<//\r\nimport MySelect from \"../Formik/MySelect\";\r\n\r\n//>>>>> STATIC PARTS CATALOG <<<<<//\r\nimport * as PARTS from \"../../parts\";\r\n\r\n//>>>>> SCSS STYLES <<<<<//\r\nimport \"./styles.scss\";\r\n\r\n//>>>>> COMPONENT FUNCTION <<<<<//  \r\nconst AddPart = () => {  \r\n\r\n    //>>>>> <select /> Arrays <<<<<//\r\n    const groupOptions = PARTS.groups;\r\n    const namesOptions = PARTS.names;\r\n\r\n    //>>>>> Hooks <<<<<//\r\n    const [activegroup, setActiveGroup] = useState(groupOptions[0]);\r\n    const [activenames, setActiveNames] = useState(namesOptions[0]);\r\n    const [activepart, setActivePart] = useState(namesOptions[0][0]);    \r\n    useEffect(() => {\r\n        const activeIndex = groupOptions.indexOf(activegroup);        \r\n        setActiveNames(namesOptions[activeIndex]);\r\n        setActivePart(namesOptions[activeIndex][0]);\r\n    }, [activegroup]);\r\n    \r\n    //>>>>> Return JSX <<<<<//\r\n    return (\r\n        <div\r\n            id=\"AddPart-container\"\r\n            className=\"Base-block-flexCol\"\r\n        >\r\n            <div className=\"Base-flexedCol-block\">\r\n                <h3>ADD A PART</h3>\r\n            </div>\r\n            <div className=\"Base-flexedCol-block\">\r\n                <Formik\r\n                    initialValues={{\r\n                        group: groupOptions[0],\r\n                    }}                    \r\n                >\r\n                    {({\r\n                        values,\r\n                        setFieldValue,\r\n                        handleChange\r\n                    }) => (\r\n                            <Form className=\"Formik-Form\" >\r\n                                <div className=\"Formik-formRow\" >\r\n                                    <MySelect\r\n                                        className=\"Formik-MySelect\"\r\n                                        name=\"group\"\r\n                                        label=\"Part Family\"\r\n                                        optionList={groupOptions}\r\n                                        onChange={(e) => {\r\n                                            setActiveGroup(e.target.value);\r\n                                            handleChange(e);\r\n                                        }}\r\n                                    />  \r\n                                </div>\r\n                            </Form>\r\n                        )}\r\n                </ Formik>\r\n            </div>\r\n            <div className=\"Base-flexedCol-block\">\r\n                <Formik\r\n                    initialValues={{\r\n                        partname: namesOptions[0][0],\r\n                    }}\r\n                    onSubmit={(values) => {\r\n                        console.log({\r\n                            action: \"add\",\r\n                            context: {\r\n                                type: activegroup,\r\n                                partName: activepart\r\n                            }\r\n                        });\r\n                    }} \r\n                >\r\n                    {({\r\n                        values,\r\n                        setFieldValue,\r\n                        handleChange\r\n                    }) => (\r\n                        <Form className=\"Formik-Form\" >\r\n                            <div className=\"Formik-formRow\" >\r\n                                <MySelect\r\n                                    className=\"Formik-MySelect\"\r\n                                    name=\"partname\"\r\n                                    label=\"Part Name\"\r\n                                    optionList={activenames}\r\n                                    onChange={(e) => {\r\n                                        setActivePart(e.target.value);\r\n                                        handleChange(e);\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className=\"Formik-formRow\" >\r\n                                <button\r\n                                    className=\"Base-button\"\r\n                                title=\"Add\"\r\n                                type=\"submit\"\r\n                                    >ADD PART</button>\r\n                            </div>     \r\n                        </Form>\r\n                    )}\r\n                </ Formik>\r\n            </ div>\r\n        </div>\r\n    );    \r\n}\r\n\r\nexport default AddPart;\r\n\r\n\r\n\r\n\r\n","C:\\Users\\Jake\\React Apps\\synthuxpad\\src\\components\\InputPanel\\EditPart\\index.js",["73","74"],"// index.js (src/components/InputPanel/EditPart)\r\n\r\n//>>>>> PACKAGES <<<<<//\r\nimport React from \"react\";\r\nimport { Formik, Form, useField } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\n//>>>>> SCSS STYLES <<<<<//\r\nimport \"./styles.scss\";\r\n\r\n//>>>>> COMPONENT FUNTCION <<<<<//  \r\nconst EditPart = (props) => {  \r\n    \r\n    //>>>>> Return <<<<<//\r\n    return (\r\n        <div\r\n            id=\"EditPart-container\"\r\n            className=\"Base-block-flexCol\"\r\n        >\r\n            <div className=\"Base-flexedCol-block\">\r\n                <h3>EDIT A PART</h3>\r\n            </div>\r\n            <div className=\"Base-flexedCol-block\">  \r\n                <Formik>\r\n                    <Form>\r\n                    </Form>\r\n                </Formik>\r\n            </div>\r\n            {/* original static version below - keep for reference */}\r\n            {/*<div className=\"Base-flexedCol-block\">                    \r\n                <Formik\r\n                    initialValues={{\r\n                        x: initParam.position.x,\r\n                        y: initParam.position.y,\r\n                        rBot: initParam.size.rBot,\r\n                        rTop: initParam.size.rTop,\r\n                        h: initParam.size.h,\r\n                    }}\r\n                    validationSchema={Yup.object({\r\n                        x: Yup.number()\r\n                            .required(\"Required\"),\r\n                        y: Yup.number()\r\n                            .required(\"Required\"),\r\n                        rBot: Yup.number()\r\n                            .required(\"Required\"),\r\n                        rTop: Yup.number()\r\n                            .required(\"Required\"),\r\n                        h: Yup.number()\r\n                            .required(\"Required\"),                        \r\n                    })}\r\n                    onSubmit={(values) => {\r\n                        props.onDispatch({\r\n                            type: 'knob',\r\n                            data: {                                \r\n                                position: {\r\n                                    x: values.x,\r\n                                    y: values.y\r\n                                },\r\n                                size: {\r\n                                    rBot: values.rBot,\r\n                                    rTop: values.rTop,\r\n                                    h: values.h\r\n                                }\r\n                            }\r\n                        });\r\n                    }}    \r\n                >        \r\n                    <Form className=\"Formik-Form\" >                        \r\n                        <div className=\"Formik-formRow\" >\r\n                            <MyInput    \r\n                                className=\"Formik-MyInput\"\r\n                                title=\"X\"\r\n                                label=\"X\"\r\n                                name=\"x\"\r\n                                type=\"number\" \r\n                            />\r\n                        </div>\r\n                        <div className=\"Formik-formRow\" >\r\n                            <MyInput\r\n                                className=\"Formik-MyInput\"\r\n                                title=\"Y\"\r\n                                label=\"Y\"\r\n                                name=\"y\"\r\n                                type=\"number\"\r\n                            />\r\n                        </div> \r\n                        <div className=\"Formik-formRow\" >\r\n                            <MyInput\r\n                                className=\"Formik-MyInput\"\r\n                                title=\"Bottom Radius\"\r\n                                label=\"Ro\"\r\n                                name=\"rBot\"\r\n                                type=\"number\"\r\n                            />\r\n                        </div>  \r\n                        <div className=\"Formik-formRow\" >\r\n                            <MyInput\r\n                                className=\"Formik-MyInput\"\r\n                                title=\"Top Radius\"\r\n                                label=\"Rf\"\r\n                                name=\"rTop\"\r\n                                type=\"number\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"Formik-formRow\" >\r\n                            <MyInput\r\n                                className=\"Formik-MyInput\"\r\n                                title=\"Height\"\r\n                                label=\"Height\"\r\n                                name=\"h\"\r\n                                type=\"number\"\r\n                            />\r\n                        </div>  \r\n                        <div className=\"Formik-formRow\" >\r\n                            <button\r\n                                title=\"Update\"\r\n                                type=\"submit\"                                            \r\n                            >\r\n                                <span role=\"img\" >UPDATE</span>\r\n                            </button>\r\n                        </div>                          \r\n                    </Form>\r\n                </Formik>\r\n            </div>*/}       \r\n        </div>\r\n    );    \r\n}\r\n\r\nexport default EditPart;\r\n\r\n\r\n\r\n\r\n","C:\\Users\\Jake\\React Apps\\synthuxpad\\src\\components\\InputPanel\\BoardInput\\index.js",["75"],"// index.js (src/components/InputPanel/BoardInput)\r\n// Version 0.1.0\r\n// 27-January 2021\r\n// Developers: Roey Tsemah & Jacob Liss, P.E.\r\n\r\n//>>>>> PACKAGES <<<<<//\r\nimport React from \"react\";\r\nimport { Formik, Form, useField } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\n//>>>>> FORMIK COMPONENT IMPORT <<<<<//\r\nimport MyInput from \"../Formik/MyInput\";\r\n\r\n//>>>>> SCSS STYLES <<<<<//\r\nimport \"./styles.scss\";\r\n\r\n//>>>>> COMPONENT FUNTCION <<<<<//  \r\nconst BoardInput = (props) => {  \r\n\r\n    const initParam = props.initParam.board;\r\n    \r\n    //>>>>> Return <<<<<//\r\n    return (\r\n        <div\r\n            id=\"BoardInput-container\"\r\n            className=\"Base-block-flexCol\"\r\n        >\r\n            <div className=\"Base-flexedCol-block\">\r\n                <h3>BOARD PARAMETERS</h3>\r\n            </div>\r\n            <div className=\"Base-flexedCol-block\">                    \r\n                <Formik\r\n                    initialValues={{\r\n                        length: initParam.size.x,\r\n                        width: initParam.size.y,\r\n                        height: initParam.size.z,\r\n                        x: initParam.position.x,\r\n                        y: initParam.position.y,\r\n                        z: initParam.position.z,\r\n                        color: initParam.mesh.color,\r\n                        metal: initParam.mesh.metal,\r\n                        rough: initParam.mesh.rough,\r\n                    }}\r\n                    validationSchema={Yup.object({\r\n                        length: Yup.number()\r\n                            .required(\"Required\")\r\n                            .min(0, \"Min 0.0\")\r\n                            .max(100, \"Max 100.0\"),\r\n                        width: Yup.number()\r\n                            .required(\"Required\")\r\n                            .min(0, \"Min 0.0\")\r\n                            .max(100, \"Max 100.0\"),\r\n                        height: Yup.number()\r\n                            .required(\"Required\")\r\n                            .min(0, \"Min 0.0\")\r\n                            .max(10, \"Max 10.0\"),\r\n                        x: Yup.number()\r\n                            .required(\"Required\"),\r\n                        y: Yup.number()\r\n                            .required(\"Required\"),\r\n                        z: Yup.number()\r\n                            .required(\"Required\"),\r\n                        color: Yup.string()\r\n                            .matches(/^#([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/, \"Invalid Color\")\r\n                            .required(\"Required\"),      \r\n                        metal: Yup.number()\r\n                            .required(\"Required\")\r\n                            .min(0, \"Min 0.0\")\r\n                            .max(1, \"Max 1.0\"),\r\n                        rough: Yup.number()\r\n                            .required(\"Required\")\r\n                            .min(0, \"Min 0.0\")\r\n                            .max(1, \"Max 1.0\"),\r\n                    })}\r\n                    onSubmit={(values) => {\r\n                        props.onDispatch({\r\n                            type: 'board',\r\n                            data: {\r\n                                size: {\r\n                                    x: values.length,\r\n                                    y: values.width,\r\n                                    z: values.height\r\n                                },\r\n                                position: {\r\n                                    x: values.x,\r\n                                    y: values.y,\r\n                                    z: values.z\r\n                                },\r\n                                scale: {\r\n                                    x: 1,\r\n                                    y: 1,\r\n                                    z: 1\r\n                                },\r\n                                mesh: {\r\n                                    color: values.color,\r\n                                    metal: values.metal,\r\n                                    rough: values.rough,\r\n                                }\r\n                            }\r\n                        });\r\n                    }}    \r\n                >        \r\n                    <Form className=\"Formik-Form\" >                        \r\n                        <div className=\"Formik-formRow\" >\r\n                            <MyInput    \r\n                                className=\"Formik-MyInput\"\r\n                                title=\"Length\"\r\n                                label=\"L\"\r\n                                name=\"length\"\r\n                                type=\"number\" \r\n                            />\r\n                        </div>\r\n                        <div className=\"Formik-formRow\" >\r\n                            <MyInput\r\n                                className=\"Formik-MyInput\"\r\n                                title=\"Width\"\r\n                                label=\"W\"\r\n                                name=\"width\"\r\n                                type=\"number\"\r\n                            />\r\n                        </div>  \r\n                        <div className=\"Formik-formRow\" >\r\n                            <MyInput\r\n                                className=\"Formik-MyInput\"\r\n                                title=\"Height\"\r\n                                label=\"H\"\r\n                                name=\"height\"\r\n                                type=\"number\"\r\n                            />\r\n                        </div>  \r\n                        <div className=\"Formik-formRow\" >\r\n                            <MyInput\r\n                                className=\"Formik-MyInput\"\r\n                                title=\"X\"\r\n                                label=\"X\"\r\n                                name=\"x\"\r\n                                type=\"number\"\r\n                                disabled={true}\r\n                            />\r\n                        </div>\r\n                        <div className=\"Formik-formRow\" >\r\n                            <MyInput\r\n                                className=\"Formik-MyInput\"\r\n                                title=\"Y\"\r\n                                label=\"Y\"\r\n                                name=\"y\"\r\n                                type=\"number\"\r\n                                disabled={true}\r\n                            />\r\n                        </div>\r\n                        <div className=\"Formik-formRow\" >\r\n                            <MyInput\r\n                                className=\"Formik-MyInput\"\r\n                                title=\"Z\"\r\n                                label=\"Z\"\r\n                                name=\"z\"\r\n                                type=\"number\"\r\n                                disabled={true}\r\n                            />\r\n                        </div>  \r\n                        <div className=\"Formik-formRow\" >\r\n                            <MyInput\r\n                                className=\"Formik-MyInput\"\r\n                                title=\"Color\"\r\n                                label=\"Color\"\r\n                                name=\"color\"\r\n                                type=\"text\"\r\n                            />\r\n                        </div> \r\n                        <div className=\"Formik-formRow\" >\r\n                            <MyInput\r\n                                className=\"Formik-MyInput\"\r\n                                title=\"Metal\"\r\n                                label=\"Metal\"\r\n                                name=\"metal\"\r\n                                type=\"number\"\r\n                            />\r\n                        </div> \r\n                        <div className=\"Formik-formRow\" >\r\n                            <MyInput\r\n                                className=\"Formik-MyInput\"\r\n                                title=\"Roughness\"\r\n                                label=\"Roughness\"\r\n                                name=\"rough\"\r\n                                type=\"number\"\r\n                            />\r\n                        </div> \r\n                        <div className=\"Formik-formRow\" >\r\n                            <button\r\n                                className=\"Base-button\"\r\n                                title=\"Update\"\r\n                                type=\"submit\"                                            \r\n                            >UPDATE BOARD</button>\r\n                        </div>                          \r\n                    </Form>\r\n                </Formik>\r\n            </div>        \r\n        </div>\r\n    );    \r\n}\r\n\r\nexport default BoardInput;\r\n\r\n// To Do List\r\n// - \r\n\r\n// Version History\r\n// -\r\n\r\n\r\n","C:\\Users\\Jake\\React Apps\\synthuxpad\\src\\components\\InputPanel\\LightInput\\index.js",[],"C:\\Users\\Jake\\React Apps\\synthuxpad\\src\\components\\MyScene\\Board\\index.js",[],"C:\\Users\\Jake\\React Apps\\synthuxpad\\src\\components\\MyScene\\KnobModal\\index.js",[],"C:\\Users\\Jake\\React Apps\\synthuxpad\\src\\components\\parts\\index.js",[],"C:\\Users\\Jake\\React Apps\\synthuxpad\\src\\components\\InputPanel\\Formik\\MyInput\\index.js",["76"],"// Title: index.js (src/components/InputPanel/Formik/MyInput)\r\n\r\n//>>>>> PACKAGES <<<<<//\r\nimport React from 'react';\r\nimport { Formik, useField } from 'formik';\r\n\r\n//>>>>> SCSS STYLES <<<<<//\r\nimport \"../../../../scss/base.scss\";\r\n\r\n//>>>>> Formik Standard <<<<<//\r\nconst MyInput = ({ label, ...props }) => {\r\n    const [field, meta] = useField(props);\r\n    return (\r\n        <div className='Formik-MyInput-container' >\r\n            <label\r\n                className='Formik-MyInput-label'\r\n                htmlFor={props.id || props.name}\r\n            >{label}</label>\r\n            <input className='Formik-MyInput-root' {...field} {...props} />\r\n            <span\r\n                title={meta.error}\r\n                className='Formik-MyInput-error'\r\n            >{meta.touched && meta.error ? \"\\uD83D\\uDEA8\" : null}</span>\r\n        </ div>\r\n    );\r\n};\r\n\r\n//>>>>> EXPORT <<<<<//\r\nexport default MyInput;","C:\\Users\\Jake\\React Apps\\synthuxpad\\src\\components\\InputPanel\\Formik\\MySelect\\index.js",["77","78"],"// Title: index.js (src/components/InputPanel/Formik/MySelect)\r\n\r\n//>>>>> PACKAGES <<<<<//\r\nimport React from 'react';\r\nimport { Formik, useField } from 'formik';\r\n\r\n//>>>>> SCSS STYLES <<<<<//\r\nimport \"../../../../scss/base.scss\";\r\n\r\n//>>>>> Formik Standard <<<<<//\r\nconst MySelect = ({ label, ...props }) => {\r\n    const [field, meta] = useField(props);\r\n    return (\r\n        <div className=\"Formik-MySelect-container\">\r\n            <label\r\n                className='Formik-MySelect-label'\r\n                htmlFor={props.id || props.name}\r\n            >{label}</label>\r\n            <select\r\n                className=\"Formik-MySelect-root\"\r\n                {...field}\r\n                {...props}\r\n            >\r\n                {props.optionList.map(item => {\r\n                    return (<option>{item}</option>)                   \r\n                })}\r\n            </select>\r\n            <span\r\n                title={meta.error}\r\n                className='Formik-MySelect-error'\r\n            >{meta.touched && meta.error ? \"\\uD83D\\uDEA8\" : null}</span>\r\n        </ div>\r\n    );\r\n};\r\n\r\n//>>>>> EXPORT <<<<<//\r\nexport default MySelect;",{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":66,"column":22,"nodeType":"85","messageId":"86","endLine":66,"endColumn":33},{"ruleId":"87","severity":1,"message":"88","line":31,"column":8,"nodeType":"89","endLine":31,"endColumn":21,"suggestions":"90"},{"ruleId":"83","severity":1,"message":"91","line":5,"column":24,"nodeType":"85","messageId":"86","endLine":5,"endColumn":32},{"ruleId":"83","severity":1,"message":"92","line":6,"column":13,"nodeType":"85","messageId":"86","endLine":6,"endColumn":16},{"ruleId":"83","severity":1,"message":"91","line":8,"column":24,"nodeType":"85","messageId":"86","endLine":8,"endColumn":32},{"ruleId":"83","severity":1,"message":"93","line":5,"column":10,"nodeType":"85","messageId":"86","endLine":5,"endColumn":16},{"ruleId":"83","severity":1,"message":"93","line":5,"column":10,"nodeType":"85","messageId":"86","endLine":5,"endColumn":16},{"ruleId":"83","severity":1,"message":"94","line":12,"column":19,"nodeType":"85","messageId":"86","endLine":12,"endColumn":23},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'setPartList' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'groupOptions' and 'namesOptions'. Either include them or remove the dependency array.","ArrayExpression",["97"],"'useField' is defined but never used.","'Yup' is defined but never used.","'Formik' is defined but never used.","'meta' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},"Update the dependencies array to be: [activegroup, groupOptions, namesOptions]",{"range":"100","text":"101"},[1031,1044],"[activegroup, groupOptions, namesOptions]"]